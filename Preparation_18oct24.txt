Core Java
Q1. What is the difference between == and equals() in Java?
- (==) It compares object references (memory addresses) to check if two object references point to the same object in memory.
- (equals) It compares the contents (values) of two objects to check if they are logically equivalent.

String s1 = new String("hello");
String s2 = new String("hello");
System.out.println(s1 == s2); // false, because s1 and s2 refer to different objects in memory.
System.out.println(s1.equals(s2)); // true, because the content of s1 and s2 is the same.

Q2. Explain the concept of garbage collection. How does the JVM manage memory?
- https://www.youtube.com/watch?v=vz6vSZRuS2M&ab_channel=Concept%26%26Coding-byShrayansh
- Garbage collector runs automatically by JVM , according to the frequency of heap getting filled up.
It deletes all the objects in the Heap, which is not referenced by any varibale in the stack.

Q3. What is the difference between final, finally, and finalize()
Feature	Purpose	Usage Context
final	Restricts a class, method, or variable	Variables (constant), Methods (no override), Classes (no inheritance)
finally	Ensures code execution after a try-catch block, whether an exception is thrown or not	Exception handling and resource cleanup
finalize()	Allows an object to clean up resources before being garbage collected (deprecated)	Object destruction (GC mechanism, deprecated)

What is the significance of the static keyword in Java?
Static Variables (Class Variables) - serve as global var
 Static Methods - serve as method call without instance
static block  - A static block is a block of code that is executed when the class is first loaded into memory, before any objects are created. This block is useful for initializing static variables or performing other setup that needs to happen once when the class is loaded.

Can you explain the difference between checked and unchecked exceptions?


What is a Java classloader, and how does it work?
Object-Oriented Programming (OOP)
What is the difference between abstraction and encapsulation?
Explain the concept of inheritance and polymorphism with examples.
What are access modifiers, and how are they used in Java?
What is method overloading and method overriding?
Explain the difference between an abstract class and an interface.
Collections and Data Structures
What is the difference between ArrayList and LinkedList?
How does HashMap work in Java?
What is the difference between HashSet and TreeSet?
Explain the fail-fast behavior of iterators in Java.
How do you sort a collection in Java?
Multi-threading and Concurrency
What is the difference between synchronized and Lock in Java?
Explain the concept of thread safety and how to achieve it.
What is a volatile keyword in Java, and when would you use it?
What are the differences between wait() and sleep()?
Explain how ExecutorService works in Java.
Design Patterns
Can you explain the Singleton design pattern and how to implement it?
What is the Factory design pattern?
Algorithms and Problem Solving
How would you reverse a string in Java?
How do you detect if a linked list has a cycle?
Write a program to find the first non-repeated character in a string.
Additional Topics
What is the Optional class introduced in Java 8?
Explain Lambda expressions and the Stream API in Java.
How does Java handle memory leaks, and how can you prevent them?
What is the difference between JDK, JRE, and JVM?
